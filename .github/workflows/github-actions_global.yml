name: CI Full Pipeline (Front + Back + Sonar)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  # ========== FRONT ==========
  frontend:
    name: CI Frontend Angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome dependencies
        run: sudo apt-get update && sudo apt-get install -y libnss3 libatk-bridge2.0-0 libxss1 libasound2-data

      - name: Install npm dependencies
        run: npm ci

      - name: Run Karma tests with coverage
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload Frontend Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/bobapp/lcov.info

  # ========== BACK ==========
  backend:
    name: CI Backend Spring Boot
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven

      - name: Run Maven tests and generate Jacoco report
        run: mvn clean verify

      - name: Generate Jacoco XML report
        run: mvn jacoco:report

      - name: Upload Backend Classes and Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-target
          path: |
            back/target/classes
            back/target/site/jacoco/jacoco.xml

  # ========== SONAR (Multi-module) ==========
  sonar:
    name: SonarCloud FullStack Analysis
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Download Backend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-target
          path: back/target

      - name: Download Frontend Artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2        
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [sonar]  # attend que le job sonar soit termin√©
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: back
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/monapp-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/monapp-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: front
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/monapp-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/monapp-frontend:${{ github.sha }}