name: CI Full Pipeline (Front + Back + Sonar)

on: 
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:   # dÃ©clenchement manuel

jobs:
  # ========== FRONT ==========
  frontend:
    name: CI Frontend Angular
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Chrome dependencies
        run: sudo apt-get update && sudo apt-get install -y libnss3 libatk-bridge2.0-0 libxss1 libasound2-data

      - name: Install npm dependencies
        run: npm ci

      - name: Run Karma tests with coverage
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Upload coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-front
          path: front/coverage/bobapp

  # ========== BACK ==========
  backend:
    name: CI Backend Spring Boot
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin
          cache: maven

      - name: Run Maven tests and generate Jacoco report
        run: mvn clean verify

      - name: Upload backend coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-back
          path: back/target/site/jacoco/**

  # ========== SONAR FRONT ==========
  sonar-frontend:
    name: SonarCloud Frontend Analysis
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Verify coverage report exists
        run: ls -R coverage/bobapp
        working-directory: front

      - name: SonarCloud Scan (Front)
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: front
          args: >
            -Dsonar.organization=mako2727
            -Dsonar.projectKey=Mako2727_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.javascript.lcov.reportPaths=coverage/bobapp/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # ========== SONAR BACK ==========
  sonar-backend:
    name: SonarCloud Backend Analysis
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: Compile backend
        run: mvn clean verify
        working-directory: back

      - name: SonarCloud Scan (Back)
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          projectBaseDir: back
          args: >
            -Dsonar.organization=mako2727
            -Dsonar.projectKey=Mako2727_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dsonar.sources=src/main/java
            -Dsonar.java.binaries=target/classes
            -Dsonar.java.coveragePlugin=jacoco
            -Dsonar.jacoco.reportPaths=target/jacoco.exec
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}